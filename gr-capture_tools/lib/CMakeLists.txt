# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-capture_tools
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

include_directories(${Boost_INCLUDE_DIR})

list(APPEND capture_tools_sources
    file_sink_text_impl.cc
    one_then_zero_impl.cc
    file_sink_on_message_impl.cc
    level_alert_impl.cc
    add_before_and_after_cc_impl.cc
    repeat_input_n_times_cc_impl.cc
    keep_middle_in_vector_impl.cc
    add_rampup_cc_impl.cc
    replace_value_ff_impl.cc
    cut_samples_cc_impl.cc
    annotate_every_n_samples_from_trigger_ff_impl.cc
    annotated_to_msg_f_impl.cc
    collect_to_vector_from_tag_f_impl.cc
    clock_recovery_mm_sync_ff_impl.cc
    add_at_tag_cc_impl.cc
    file_source_tag_end_impl.cc
    head_tag_end_impl.cc
    pfb_clock_sync_sync_fff_impl.cc
    msk_timing_recovery_sync_cc_impl.cc
    bit_sniffer_impl.cc
    freqest_impl.cc
    repeat_input_n_times_cscs_impl.cc
    threshold_tag_other_stream_cc_impl.cc
    file_sink_on_tag_impl.cc
    msg_to_gfsk_c_impl.cc
    file_source_on_tag_impl.cc
    tag_on_set_one_f_impl.cc
    tag_on_set_one_b_impl.cc
    tag_first_non_zero_cc_impl.cc
    burst_msg_source_c_impl.cc
    fft_burst_tagger_impl.cc
    tagged_burst_to_pdu_impl.cc
    sync_and_strobe_impl.cc
    xrun_monitor_ff_impl.cc
    xrun_monitor_cc_impl.cc
    save_iq_for_failed_impl.cc
    vector_source_impl.cc
    print_tags_c_impl.cc
    file_sink_store_tags_impl.cc
    zwave_field_parser_impl.cc
)

set(capture_tools_sources "${capture_tools_sources}" PARENT_SCOPE)
if(NOT capture_tools_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT capture_tools_sources)

add_library(gnuradio-capture_tools SHARED ${capture_tools_sources})
target_link_libraries(gnuradio-capture_tools gnuradio::gnuradio-runtime gnuradio::gnuradio-filter)
target_include_directories(gnuradio-capture_tools
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-capture_tools PROPERTIES DEFINE_SYMBOL "gnuradio_capture_tools_EXPORTS")
set_target_properties(gnuradio-capture_tools PROPERTIES SOVERSION 3.8.0)

if(APPLE)
    set_target_properties(gnuradio-capture_tools PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-capture_tools)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_capture_tools_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-capture_tools)

if(NOT test_capture_tools_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_capture_tools_sources)

foreach(qa_file ${test_capture_tools_sources})
    GR_ADD_CPP_TEST("capture_tools_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
