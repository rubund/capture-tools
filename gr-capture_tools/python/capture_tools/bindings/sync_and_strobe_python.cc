/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(sync_and_strobe.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(e6cdc85a824cae622556380ca6c62797)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/capture_tools/sync_and_strobe.h>
// pydoc.h is automatically generated in the build directory
#include <sync_and_strobe_pydoc.h>

void bind_sync_and_strobe(py::module& m)
{

    using sync_and_strobe    = ::gr::capture_tools::sync_and_strobe;


    py::class_<sync_and_strobe, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<sync_and_strobe>>(m, "sync_and_strobe", D(sync_and_strobe))

        .def(py::init(&sync_and_strobe::make),
           py::arg("sps"),
           py::arg("npreamb"),
           D(sync_and_strobe,make)
        )
        




        
        .def("set_sync_word",&sync_and_strobe::set_sync_word,       
            py::arg("s"),
            D(sync_and_strobe,set_sync_word)
        )


        
        .def("set_strobe_offset",&sync_and_strobe::set_strobe_offset,       
            py::arg("val"),
            D(sync_and_strobe,set_strobe_offset)
        )


        
        .def("set_preamble_timeout",&sync_and_strobe::set_preamble_timeout,       
            py::arg("val"),
            D(sync_and_strobe,set_preamble_timeout)
        )


        
        .def("set_n_to_catch",&sync_and_strobe::set_n_to_catch,       
            py::arg("val"),
            D(sync_and_strobe,set_n_to_catch)
        )


        
        .def("set_sps",&sync_and_strobe::set_sps,       
            py::arg("val"),
            D(sync_and_strobe,set_sps)
        )


        
        .def("set_spsmargin",&sync_and_strobe::set_spsmargin,       
            py::arg("val"),
            D(sync_and_strobe,set_spsmargin)
        )


        
        .def("set_hysteresis",&sync_and_strobe::set_hysteresis,       
            py::arg("val"),
            D(sync_and_strobe,set_hysteresis)
        )


        
        .def("set_decim_in_front",&sync_and_strobe::set_decim_in_front,       
            py::arg("val"),
            D(sync_and_strobe,set_decim_in_front)
        )


        
        .def("set_min_swing",&sync_and_strobe::set_min_swing,       
            py::arg("val"),
            D(sync_and_strobe,set_min_swing)
        )


        
        .def("set_preamble_longer",&sync_and_strobe::set_preamble_longer,       
            py::arg("val"),
            D(sync_and_strobe,set_preamble_longer)
        )


        
        .def("set_also_match_inverted",&sync_and_strobe::set_also_match_inverted,       
            py::arg("val"),
            D(sync_and_strobe,set_also_match_inverted)
        )


        
        .def("set_name",&sync_and_strobe::set_name,       
            py::arg("val"),
            D(sync_and_strobe,set_name)
        )


        
        .def("set_min_mag",&sync_and_strobe::set_min_mag,       
            py::arg("val"),
            D(sync_and_strobe,set_min_mag)
        )

        ;




}








