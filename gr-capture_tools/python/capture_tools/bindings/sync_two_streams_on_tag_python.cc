/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(sync_two_streams_on_tag.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(e449daa740584a0d563f823e1d74ff84)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/capture_tools/sync_two_streams_on_tag.h>
// pydoc.h is automatically generated in the build directory
#include <sync_two_streams_on_tag_pydoc.h>

void bind_sync_two_streams_on_tag(py::module& m)
{

    using sync_two_streams_on_tag    = ::gr::capture_tools::sync_two_streams_on_tag;


    py::class_<sync_two_streams_on_tag, gr::block, gr::basic_block,
        std::shared_ptr<sync_two_streams_on_tag>>(m, "sync_two_streams_on_tag", D(sync_two_streams_on_tag))

        .def(py::init(&sync_two_streams_on_tag::make),
           py::arg("tag_str"),
           D(sync_two_streams_on_tag,make)
        )
        




        
        .def("reset_sync",&sync_two_streams_on_tag::reset_sync,       
            D(sync_two_streams_on_tag,reset_sync)
        )

        ;




}








