# auto-generated by grc.converter

id: capture_tools_file_source_on_tag
label: file_source_on_tag
category: '[capture_tools]'

parameters:
-   id: file
    label: File
    dtype: file_open
-   id: type
    label: Output Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: tag_str
    label: Tag
    dtype: string
    default: start
-   id: filename_in_tag
    label: Filename in tag
    dtype: ''
    default: 'False'

inputs:
-   label: in_tags
    domain: stream
    dtype: float

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
asserts:
- ${ vlen > 0 }

templates:
    imports: import capture_tools
    make: capture_tools.file_source_on_tag(${type.size}*${vlen}, ${file}, ${tag_str},
        ${filename_in_tag})
    callbacks:
    - open(${file}, ${repeat})

file_format: 1
