# auto-generated by grc.converter

id: capture_tools_msg_to_gfsk_c
label: msg_to_gfsk_c
category: '[capture_tools]'

parameters:
-   id: samples_per_symbol
    label: Samples per symbol
    dtype: int
    default: '16'
-   id: sensitivity
    label: Sensitivity
    dtype: float
    default: '0.098175'
-   id: sensitivity_range
    label: Sensitivity range
    dtype: float
    default: '0.00'
-   id: bt
    label: BT
    dtype: float
    default: '0.5'
-   id: fixed_delay
    label: Delay between packets
    dtype: int
    default: '1000'
-   id: fixed_delay_range
    label: Variation for the delay between packets
    dtype: int
    default: '0'
-   id: rampup_delay
    label: Ramp-up delay
    dtype: int
    default: '40'
-   id: settle_delay
    label: Settle delay
    dtype: int
    default: '80'
-   id: rampdown_delay
    label: Ramp-down delay
    dtype: int
    default: '7000'
-   id: rampup_alpha
    label: Ramp-up alpha
    dtype: float
    default: '0.2'
-   id: rampdown_alpha
    label: Ramp-down alpha
    dtype: float
    default: '0.2'
-   id: repeat_packet
    label: Repeat the same packet
    dtype: bool
    default: 'False'
-   id: reset_phase
    label: Reset phase before every packet
    dtype: bool
    default: 'True'
-   id: randomize_phase
    label: Randomize phase before every packet
    dtype: bool
    default: 'False'
-   id: value_between
    label: Modulation value between packets
    dtype: float
    default: '0'
-   id: level_off
    label: Scale when transmitter is off
    dtype: float
    default: '0'
-   id: sync_tag
    label: Sync tag
    dtype: string
    default: start

inputs:
-   domain: message
    id: packet
    optional: true
-   label: sync
    domain: stream
    dtype: byte
    optional: true

outputs:
-   domain: stream
    dtype: complex
-   domain: message
    id: ready
    optional: true
-   label: modulation
    domain: stream
    dtype: float
    optional: true

templates:
    imports: from gnuradio import capture_tools
    make: |-
        capture_tools.msg_to_gfsk_c(${samples_per_symbol}, ${sensitivity}, ${bt})
        self.${id}.set_rampup_alpha(${rampup_alpha})
        self.${id}.set_rampdown_alpha(${rampdown_alpha})
        self.${id}.set_fixed_delay(${fixed_delay})
        self.${id}.set_reset_phase(${reset_phase})
        self.${id}.set_rampup_delay(${rampup_delay})
        self.${id}.set_rampdown_delay(${rampdown_delay})
        self.${id}.set_wait_settle(${settle_delay})
        self.${id}.set_repeat_packet(${repeat_packet})
        self.${id}.set_value_between(${value_between})
        self.${id}.set_level_off(${level_off})
        self.${id}.set_fixed_delay_range(${fixed_delay_range})
        self.${id}.set_sensitivity_range(${sensitivity_range})
        self.${id}.set_search_tag(${sync_tag})
        self.${id}.set_randomize_phase(${randomize_phase})
    callbacks:
    - self.${id}.set_fixed_delay(${fixed_delay})
    - self.${id}.set_fixed_delay_range(${fixed_delay_range})
    - self.${id}.set_rampup_alpha(${rampup_alpha})
    - self.${id}.set_rampdown_alpha(${rampdown_alpha})
    - self.${id}.set_reset_phase(${reset_phase})
    - self.${id}.set_rampup_delay(${rampup_delay})
    - self.${id}.set_rampdown_delay(${rampdown_delay})
    - self.${id}.set_wait_settle(${settle_delay})
    - self.${id}.set_repeat_packet(${repeat_packet})
    - self.${id}.set_value_between(${value_between})
    - self.${id}.set_level_off(${level_off})
    - self.${id}.set_sensitivity(${sensitivity})
    - self.${id}.set_bt(${bt})
    - self.${id}.set_randomize_phase(${randomize_phase})
    - self.${id}.set_sensitivity_range(${sensitivity_range})

file_format: 1
